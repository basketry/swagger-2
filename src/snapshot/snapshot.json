{
  "basketry": "1",
  "sourcePath": "src/snapshot/example.oas2.json",
  "title": { "value": "BasketryExample" },
  "majorVersion": { "value": 1 },
  "interfaces": [
    {
      "name": "gizmo",
      "methods": [
        {
          "name": { "value": "getGizmos" },
          "security": [
            [
              {
                "type": { "value": "oauth2" },
                "name": { "value": "oauth2Auth" },
                "flows": [
                  {
                    "type": { "value": "implicit" },
                    "authorizationUrl": { "value": "https://example.com/auth" },
                    "scopes": [
                      {
                        "name": { "value": "read:gizmos" },
                        "description": { "value": "Access gizmo data" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "name": { "value": "search" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [],
              "meta": [
                {
                  "key": { "value": "metaString" },
                  "value": { "value": "bar" }
                },
                {
                  "key": { "value": "metaNumber" },
                  "value": { "value": 1234 }
                },
                {
                  "key": { "value": "metaBoolean" },
                  "value": { "value": true }
                },
                { "key": { "value": "metaNull" }, "value": { "value": null } },
                {
                  "key": { "value": "metaObject" },
                  "value": { "value": { "foo": "bar" } }
                },
                {
                  "key": { "value": "metaArray" },
                  "value": { "value": [{ "foo": "bar" }] }
                }
              ]
            },
            {
              "name": { "value": "state" },
              "typeName": { "value": "stateOfMatter" },
              "isPrimitive": false,
              "isArray": false,
              "rules": [
                {
                  "id": "string-enum",
                  "values": [
                    { "value": "solid" },
                    { "value": "liquid" },
                    { "value": "gas" },
                    { "value": "plasma" },
                    { "value": "bose-einstein-condensate" }
                  ]
                }
              ],
              "meta": [
                {
                  "key": { "value": "codegen-enum-description" },
                  "value": { "value": "One of the many states of matter" }
                },
                {
                  "key": { "value": "codegen-enum-value-descriptions" },
                  "value": {
                    "value": {
                      "solid": "Substance holds its own shape",
                      "liquid": "Takes the shape of its container",
                      "gas": "Molecules are far apart and don't really interact with each other",
                      "plasma": "Mixture of separated electons and nuclei at high temperature",
                      "bose-einstein-condensate": "Gas of bosons at their lowest quantum state"
                    }
                  }
                }
              ]
            }
          ],
          "description": { "value": "Only has a summary" },
          "returnType": {
            "typeName": { "value": "gizmosResponse" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "name": { "value": "createGizmo" },
          "security": [
            [
              {
                "type": { "value": "oauth2" },
                "name": { "value": "oauth2Auth" },
                "flows": [
                  {
                    "type": { "value": "implicit" },
                    "authorizationUrl": { "value": "https://example.com/auth" },
                    "scopes": [
                      {
                        "name": { "value": "write:gizmos" },
                        "description": { "value": "Write gizmo data" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "name": { "value": "size" },
              "description": { "value": "Anonymous enum" },
              "typeName": { "value": "createGizmoSize" },
              "isPrimitive": false,
              "isArray": false,
              "rules": [
                {
                  "id": "string-enum",
                  "values": [
                    { "value": "small" },
                    { "value": "medium" },
                    { "value": "big" },
                    { "value": "XL" }
                  ]
                }
              ],
              "meta": [
                {
                  "key": { "value": "codegen-enum-description" },
                  "value": { "value": "Anonymous enum" }
                },
                {
                  "key": { "value": "codegen-enum-value-descriptions" },
                  "value": {
                    "value": {
                      "small": "The small size",
                      "medium": "Between the small and large sizes",
                      "big": "The big size",
                      "XL": "Bigger than big"
                    }
                  }
                }
              ]
            },
            {
              "name": { "value": "state" },
              "typeName": { "value": "stateOfMatter" },
              "isPrimitive": false,
              "isArray": false,
              "rules": [
                {
                  "id": "string-enum",
                  "values": [
                    { "value": "solid" },
                    { "value": "liquid" },
                    { "value": "gas" },
                    { "value": "plasma" },
                    { "value": "bose-einstein-condensate" }
                  ]
                }
              ],
              "meta": [
                {
                  "key": { "value": "codegen-enum-description" },
                  "value": { "value": "One of the many states of matter" }
                },
                {
                  "key": { "value": "codegen-enum-value-descriptions" },
                  "value": {
                    "value": {
                      "solid": "Substance holds its own shape",
                      "liquid": "Takes the shape of its container",
                      "gas": "Molecules are far apart and don't really interact with each other",
                      "plasma": "Mixture of separated electons and nuclei at high temperature",
                      "bose-einstein-condensate": "Gas of bosons at their lowest quantum state"
                    }
                  }
                }
              ]
            }
          ],
          "description": [
            { "value": "Has a summary in addition to a description" },
            { "value": "Has a description in addition to a summary" }
          ],
          "returnType": {
            "typeName": { "value": "gizmo" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "name": { "value": "updateGizmo" },
          "security": [
            [
              {
                "type": { "value": "oauth2" },
                "name": { "value": "oauth2Auth" },
                "flows": [
                  {
                    "type": { "value": "implicit" },
                    "authorizationUrl": { "value": "https://example.com/auth" },
                    "scopes": [
                      {
                        "name": { "value": "write:gizmos" },
                        "description": { "value": "Write gizmo data" }
                      },
                      {
                        "name": { "value": "admin:gizmos" },
                        "description": { "value": "Manage gizmos" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": [
            {
              "name": { "value": "factors" },
              "description": { "value": "array of primitive" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": true,
              "rules": [
                { "id": "array-max-items", "max": { "value": 6 } },
                { "id": "array-min-items", "min": { "value": 2 } },
                {
                  "id": "string-pattern",
                  "pattern": { "value": "[0-9a-fA-F]+" }
                }
              ]
            }
          ],
          "returnType": {
            "typeName": { "value": "gizmo" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        }
      ],
      "protocols": {
        "http": [
          {
            "path": { "value": "/gizmos" },
            "methods": [
              {
                "name": { "value": "getGizmos" },
                "verb": { "value": "get" },
                "parameters": [
                  { "name": { "value": "search" }, "in": { "value": "query" } },
                  { "name": { "value": "state" }, "in": { "value": "query" } }
                ],
                "successCode": { "value": 200 }
              },
              {
                "name": { "value": "createGizmo" },
                "verb": { "value": "post" },
                "parameters": [
                  { "name": { "value": "size" }, "in": { "value": "query" } },
                  { "name": { "value": "state" }, "in": { "value": "query" } }
                ],
                "successCode": { "value": 201 }
              },
              {
                "name": { "value": "updateGizmo" },
                "verb": { "value": "put" },
                "parameters": [
                  {
                    "name": { "value": "factors" },
                    "in": { "value": "query" },
                    "array": { "value": "csv" }
                  }
                ],
                "successCode": { "value": 200 }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "widget",
      "methods": [
        {
          "name": { "value": "getWidgets" },
          "security": [
            [
              {
                "type": { "value": "apiKey" },
                "name": { "value": "apiKeyAuth" },
                "parameter": { "value": "x-apikey" },
                "in": { "value": "header" }
              }
            ]
          ],
          "parameters": [],
          "returnType": {
            "typeName": { "value": "widget" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "name": { "value": "createWidget" },
          "security": [
            [
              {
                "type": { "value": "apiKey" },
                "name": { "value": "apiKeyAuth" },
                "parameter": { "value": "x-apikey" },
                "in": { "value": "header" }
              }
            ]
          ],
          "parameters": [
            {
              "name": { "value": "body" },
              "description": { "value": "The new widget" },
              "typeName": { "value": "createWidgetBody" },
              "isPrimitive": false,
              "isArray": false,
              "rules": []
            }
          ]
        },
        {
          "name": { "value": "putWidget" },
          "security": [
            [
              {
                "type": { "value": "apiKey" },
                "name": { "value": "apiKeyAuth" },
                "parameter": { "value": "x-apikey" },
                "in": { "value": "header" }
              }
            ]
          ],
          "parameters": []
        },
        {
          "name": { "value": "getWidgetFoo" },
          "security": [
            [
              {
                "type": { "value": "apiKey" },
                "name": { "value": "apiKeyAuth" },
                "parameter": { "value": "x-apikey" },
                "in": { "value": "header" }
              }
            ]
          ],
          "parameters": [
            {
              "name": { "value": "id" },
              "description": { "value": "The widget ID" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [
                { "id": "required" },
                { "id": "string-max-length", "length": { "value": 30 } }
              ]
            }
          ],
          "returnType": {
            "typeName": { "value": "widget" },
            "isPrimitive": false,
            "isArray": false,
            "rules": []
          }
        },
        {
          "name": { "value": "deleteWidgetFoo" },
          "security": [
            [
              {
                "type": { "value": "apiKey" },
                "name": { "value": "apiKeyAuth" },
                "parameter": { "value": "x-apikey" },
                "in": { "value": "header" }
              }
            ]
          ],
          "parameters": [
            {
              "name": { "value": "id" },
              "description": { "value": "The widget ID" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [
                { "id": "required" },
                { "id": "string-max-length", "length": { "value": 30 } }
              ]
            }
          ]
        }
      ],
      "protocols": {
        "http": [
          {
            "path": { "value": "/widgets" },
            "methods": [
              {
                "name": { "value": "getWidgets" },
                "verb": { "value": "get" },
                "parameters": [],
                "successCode": { "value": 200 }
              },
              {
                "name": { "value": "createWidget" },
                "verb": { "value": "post" },
                "parameters": [
                  { "name": { "value": "body" }, "in": { "value": "body" } }
                ],
                "successCode": { "value": 204 }
              },
              {
                "name": { "value": "putWidget" },
                "verb": { "value": "put" },
                "parameters": [],
                "successCode": { "value": 200 }
              }
            ]
          },
          {
            "path": { "value": "/widgets/{id}/foo" },
            "methods": [
              {
                "name": { "value": "getWidgetFoo" },
                "verb": { "value": "get" },
                "parameters": [
                  { "name": { "value": "id" }, "in": { "value": "path" } }
                ],
                "successCode": { "value": 200 }
              },
              {
                "name": { "value": "deleteWidgetFoo" },
                "verb": { "value": "delete" },
                "parameters": [
                  { "name": { "value": "id" }, "in": { "value": "path" } }
                ],
                "successCode": { "value": 204 }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "exhaustive",
      "methods": [
        {
          "name": { "value": "exhaustiveFormats" },
          "security": [],
          "parameters": [
            {
              "name": { "value": "string-no-format" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "string-date" },
              "typeName": { "value": "date" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [
                { "id": "string-format", "format": { "value": "date" } }
              ]
            },
            {
              "name": { "value": "string-date-time" },
              "typeName": { "value": "date-time" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [
                { "id": "string-format", "format": { "value": "date-time" } }
              ]
            },
            {
              "name": { "value": "integer-no-format" },
              "typeName": { "value": "integer" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "integer-int32" },
              "typeName": { "value": "integer" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "integer-int64" },
              "typeName": { "value": "long" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "number-no-format" },
              "typeName": { "value": "number" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "number-float" },
              "typeName": { "value": "float" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "number-double" },
              "typeName": { "value": "double" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            }
          ]
        },
        {
          "name": { "value": "exhaustiveParams" },
          "security": [],
          "parameters": [
            {
              "name": { "value": "query-string" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "query-enum" },
              "typeName": { "value": "exhaustiveParamsQueryEnum" },
              "isPrimitive": false,
              "isArray": false,
              "rules": [
                {
                  "id": "string-enum",
                  "values": [
                    { "value": "one" },
                    { "value": "two" },
                    { "value": "three" }
                  ]
                }
              ]
            },
            {
              "name": { "value": "query-number" },
              "typeName": { "value": "number" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "query-integer" },
              "typeName": { "value": "integer" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "query-boolean" },
              "typeName": { "value": "boolean" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "query-string-array" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": true,
              "rules": []
            },
            {
              "name": { "value": "query-enum-array" },
              "typeName": { "value": "exhaustiveParamsQueryEnumArray" },
              "isPrimitive": false,
              "isArray": true,
              "rules": [
                {
                  "id": "string-enum",
                  "values": [
                    { "value": "one" },
                    { "value": "two" },
                    { "value": "three" }
                  ]
                }
              ]
            },
            {
              "name": { "value": "query-number-array" },
              "typeName": { "value": "number" },
              "isPrimitive": true,
              "isArray": true,
              "rules": []
            },
            {
              "name": { "value": "query-integer-array" },
              "typeName": { "value": "integer" },
              "isPrimitive": true,
              "isArray": true,
              "rules": []
            },
            {
              "name": { "value": "query-boolean-array" },
              "typeName": { "value": "boolean" },
              "isPrimitive": true,
              "isArray": true,
              "rules": []
            },
            {
              "name": { "value": "path-string" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "id": "required" }]
            },
            {
              "name": { "value": "path-enum" },
              "typeName": { "value": "exhaustiveParamsPathEnum" },
              "isPrimitive": false,
              "isArray": false,
              "rules": [
                { "id": "required" },
                {
                  "id": "string-enum",
                  "values": [
                    { "value": "one" },
                    { "value": "two" },
                    { "value": "three" }
                  ]
                }
              ]
            },
            {
              "name": { "value": "path-number" },
              "typeName": { "value": "number" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "id": "required" }]
            },
            {
              "name": { "value": "path-integer" },
              "typeName": { "value": "integer" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "id": "required" }]
            },
            {
              "name": { "value": "path-boolean" },
              "typeName": { "value": "boolean" },
              "isPrimitive": true,
              "isArray": false,
              "rules": [{ "id": "required" }]
            },
            {
              "name": { "value": "path-string-array" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": true,
              "rules": [{ "id": "required" }]
            },
            {
              "name": { "value": "path-enum-array" },
              "typeName": { "value": "exhaustiveParamsPathEnumArray" },
              "isPrimitive": false,
              "isArray": true,
              "rules": [
                { "id": "required" },
                {
                  "id": "string-enum",
                  "values": [
                    { "value": "one" },
                    { "value": "two" },
                    { "value": "three" }
                  ]
                }
              ]
            },
            {
              "name": { "value": "path-number-array" },
              "typeName": { "value": "number" },
              "isPrimitive": true,
              "isArray": true,
              "rules": [{ "id": "required" }]
            },
            {
              "name": { "value": "path-integer-array" },
              "typeName": { "value": "integer" },
              "isPrimitive": true,
              "isArray": true,
              "rules": [{ "id": "required" }]
            },
            {
              "name": { "value": "path-boolean-array" },
              "typeName": { "value": "boolean" },
              "isPrimitive": true,
              "isArray": true,
              "rules": [{ "id": "required" }]
            },
            {
              "name": { "value": "header-string" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "header-enum" },
              "typeName": { "value": "exhaustiveParamsHeaderEnum" },
              "isPrimitive": false,
              "isArray": false,
              "rules": [
                {
                  "id": "string-enum",
                  "values": [
                    { "value": "one" },
                    { "value": "two" },
                    { "value": "three" }
                  ]
                }
              ]
            },
            {
              "name": { "value": "header-number" },
              "typeName": { "value": "number" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "header-integer" },
              "typeName": { "value": "integer" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "header-boolean" },
              "typeName": { "value": "boolean" },
              "isPrimitive": true,
              "isArray": false,
              "rules": []
            },
            {
              "name": { "value": "header-string-array" },
              "typeName": { "value": "string" },
              "isPrimitive": true,
              "isArray": true,
              "rules": []
            },
            {
              "name": { "value": "header-enum-array" },
              "typeName": { "value": "exhaustiveParamsHeaderEnumArray" },
              "isPrimitive": false,
              "isArray": true,
              "rules": [
                {
                  "id": "string-enum",
                  "values": [
                    { "value": "one" },
                    { "value": "two" },
                    { "value": "three" }
                  ]
                }
              ]
            },
            {
              "name": { "value": "header-number-array" },
              "typeName": { "value": "number" },
              "isPrimitive": true,
              "isArray": true,
              "rules": []
            },
            {
              "name": { "value": "header-integer-array" },
              "typeName": { "value": "integer" },
              "isPrimitive": true,
              "isArray": true,
              "rules": []
            },
            {
              "name": { "value": "header-boolean-array" },
              "typeName": { "value": "boolean" },
              "isPrimitive": true,
              "isArray": true,
              "rules": []
            },
            {
              "name": { "value": "body" },
              "typeName": { "value": "exhaustiveParamsBody" },
              "isPrimitive": false,
              "isArray": false,
              "rules": []
            }
          ]
        }
      ],
      "protocols": {
        "http": [
          {
            "path": { "value": "/exhaustive" },
            "methods": [
              {
                "name": { "value": "exhaustiveFormats" },
                "verb": { "value": "get" },
                "parameters": [
                  {
                    "name": { "value": "string-no-format" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "string-date" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "string-date-time" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "integer-no-format" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "integer-int32" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "integer-int64" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "number-no-format" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "number-float" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "number-double" },
                    "in": { "value": "query" }
                  }
                ],
                "successCode": { "value": 204 }
              }
            ]
          },
          {
            "path": {
              "value": "/exhaustive/{path-string}/{path-enum}/{path-number}/{path-integer}/{path-boolean}/{path-string-array}/{path-enum-array}/{path-number-array}/{path-integer-array}/{path-boolean-array}"
            },
            "methods": [
              {
                "name": { "value": "exhaustiveParams" },
                "verb": { "value": "get" },
                "parameters": [
                  {
                    "name": { "value": "query-string" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "query-enum" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "query-number" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "query-integer" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "query-boolean" },
                    "in": { "value": "query" }
                  },
                  {
                    "name": { "value": "query-string-array" },
                    "in": { "value": "query" },
                    "array": { "value": "csv" }
                  },
                  {
                    "name": { "value": "query-enum-array" },
                    "in": { "value": "query" },
                    "array": { "value": "csv" }
                  },
                  {
                    "name": { "value": "query-number-array" },
                    "in": { "value": "query" },
                    "array": { "value": "csv" }
                  },
                  {
                    "name": { "value": "query-integer-array" },
                    "in": { "value": "query" },
                    "array": { "value": "csv" }
                  },
                  {
                    "name": { "value": "query-boolean-array" },
                    "in": { "value": "query" },
                    "array": { "value": "csv" }
                  },
                  {
                    "name": { "value": "path-string" },
                    "in": { "value": "path" }
                  },
                  {
                    "name": { "value": "path-enum" },
                    "in": { "value": "path" }
                  },
                  {
                    "name": { "value": "path-number" },
                    "in": { "value": "path" }
                  },
                  {
                    "name": { "value": "path-integer" },
                    "in": { "value": "path" }
                  },
                  {
                    "name": { "value": "path-boolean" },
                    "in": { "value": "path" }
                  },
                  {
                    "name": { "value": "path-string-array" },
                    "in": { "value": "path" },
                    "array": { "value": "csv" }
                  },
                  {
                    "name": { "value": "path-enum-array" },
                    "in": { "value": "path" },
                    "array": { "value": "pipes" }
                  },
                  {
                    "name": { "value": "path-number-array" },
                    "in": { "value": "path" },
                    "array": { "value": "ssv" }
                  },
                  {
                    "name": { "value": "path-integer-array" },
                    "in": { "value": "path" },
                    "array": { "value": "tsv" }
                  },
                  {
                    "name": { "value": "path-boolean-array" },
                    "in": { "value": "path" },
                    "array": { "value": "csv" }
                  },
                  {
                    "name": { "value": "header-string" },
                    "in": { "value": "header" }
                  },
                  {
                    "name": { "value": "header-enum" },
                    "in": { "value": "header" }
                  },
                  {
                    "name": { "value": "header-number" },
                    "in": { "value": "header" }
                  },
                  {
                    "name": { "value": "header-integer" },
                    "in": { "value": "header" }
                  },
                  {
                    "name": { "value": "header-boolean" },
                    "in": { "value": "header" }
                  },
                  {
                    "name": { "value": "header-string-array" },
                    "in": { "value": "header" },
                    "array": { "value": "csv" }
                  },
                  {
                    "name": { "value": "header-enum-array" },
                    "in": { "value": "header" },
                    "array": { "value": "csv" }
                  },
                  {
                    "name": { "value": "header-number-array" },
                    "in": { "value": "header" },
                    "array": { "value": "pipes" }
                  },
                  {
                    "name": { "value": "header-integer-array" },
                    "in": { "value": "header" },
                    "array": { "value": "ssv" }
                  },
                  {
                    "name": { "value": "header-boolean-array" },
                    "in": { "value": "header" },
                    "array": { "value": "tsv" }
                  },
                  { "name": { "value": "body" }, "in": { "value": "body" } }
                ],
                "successCode": { "value": 204 }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "authPermutation",
      "methods": [
        {
          "name": { "value": "all-auth-schemes" },
          "security": [
            [
              { "type": { "value": "basic" }, "name": { "value": "basicAuth" } }
            ],
            [
              {
                "type": { "value": "basic" },
                "name": { "value": "alternate-basic-auth" }
              }
            ],
            [
              {
                "type": { "value": "apiKey" },
                "name": { "value": "apiKeyAuth" },
                "parameter": { "value": "x-apikey" },
                "in": { "value": "header" }
              }
            ],
            [
              {
                "type": { "value": "oauth2" },
                "name": { "value": "oauth2Auth" },
                "flows": [
                  {
                    "type": { "value": "implicit" },
                    "authorizationUrl": { "value": "https://example.com/auth" },
                    "scopes": [
                      {
                        "name": { "value": "admin:gizmos" },
                        "description": { "value": "Manage gizmos" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": []
        },
        {
          "name": { "value": "combo-auth-schemes" },
          "security": [
            [
              {
                "type": { "value": "basic" },
                "name": { "value": "basicAuth" }
              },
              {
                "type": { "value": "apiKey" },
                "name": { "value": "apiKeyAuth" },
                "parameter": { "value": "x-apikey" },
                "in": { "value": "header" }
              }
            ],
            [
              {
                "type": { "value": "basic" },
                "name": { "value": "basicAuth" }
              },
              {
                "type": { "value": "apiKey" },
                "name": { "value": "alternateApiKeyAuth" },
                "parameter": { "value": "apikey" },
                "in": { "value": "query" }
              }
            ],
            [
              {
                "type": { "value": "basic" },
                "name": { "value": "alternate-basic-auth" }
              },
              {
                "type": { "value": "oauth2" },
                "name": { "value": "oauth2Auth" },
                "flows": [
                  {
                    "type": { "value": "implicit" },
                    "authorizationUrl": { "value": "https://example.com/auth" },
                    "scopes": [
                      {
                        "name": { "value": "admin:gizmos" },
                        "description": { "value": "Manage gizmos" }
                      }
                    ]
                  }
                ]
              }
            ]
          ],
          "parameters": []
        }
      ],
      "protocols": {
        "http": [
          {
            "path": { "value": "/authPermutations" },
            "methods": [
              {
                "name": { "value": "all-auth-schemes" },
                "verb": { "value": "get" },
                "parameters": [],
                "successCode": { "value": 200 }
              },
              {
                "name": { "value": "combo-auth-schemes" },
                "verb": { "value": "put" },
                "parameters": [],
                "successCode": { "value": 200 }
              }
            ]
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": { "value": "gizmo" },
      "properties": [
        {
          "name": { "value": "id" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [{ "id": "string-max-length", "length": { "value": 30 } }]
        },
        {
          "name": { "value": "name" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "name": { "value": "size" },
          "typeName": { "value": "productSize" },
          "isPrimitive": false,
          "isArray": false,
          "rules": [
            {
              "id": "string-enum",
              "values": [
                { "value": "small" },
                { "value": "medium" },
                { "value": "large" }
              ]
            }
          ],
          "meta": [
            {
              "key": { "value": "codegen-enum-description" },
              "value": { "value": "One of the many states of matter" }
            },
            {
              "key": { "value": "codegen-enum-value-descriptions" },
              "value": {
                "value": {
                  "small": "The small size",
                  "medium": "Between the small and large sizes",
                  "large": "The larger size"
                }
              }
            }
          ]
        }
      ],
      "rules": []
    },
    {
      "name": { "value": "widget" },
      "properties": [
        {
          "name": { "value": "id" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [
            { "id": "required" },
            { "id": "string-max-length", "length": { "value": 30 } }
          ]
        },
        {
          "name": { "value": "name" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [
            { "id": "string-max-length", "length": { "value": 30 } },
            { "id": "string-pattern", "pattern": { "value": "[0-9a-fA-F]+" } }
          ]
        },
        {
          "name": { "value": "fiz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [
            { "id": "required" },
            { "id": "number-multiple-of", "value": { "value": 3 } }
          ]
        },
        {
          "name": { "value": "buzz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [{ "id": "number-multiple-of", "value": { "value": 5 } }]
        },
        {
          "name": { "value": "fizbuzz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [{ "id": "number-multiple-of", "value": { "value": 15 } }]
        },
        {
          "name": { "value": "foo" },
          "typeName": { "value": "widgetFoo" },
          "isPrimitive": false,
          "isArray": false,
          "rules": []
        },
        {
          "name": { "value": "size" },
          "typeName": { "value": "productSize" },
          "isPrimitive": false,
          "isArray": false,
          "rules": [
            {
              "id": "string-enum",
              "values": [
                { "value": "small" },
                { "value": "medium" },
                { "value": "large" }
              ]
            }
          ],
          "meta": [
            {
              "key": { "value": "codegen-enum-description" },
              "value": { "value": "One of the many states of matter" }
            },
            {
              "key": { "value": "codegen-enum-value-descriptions" },
              "value": {
                "value": {
                  "small": "The small size",
                  "medium": "Between the small and large sizes",
                  "large": "The larger size"
                }
              }
            }
          ]
        }
      ],
      "rules": [{ "id": "object-additional-properties", "forbidden": true }]
    },
    {
      "name": { "value": "newWidget" },
      "properties": [
        {
          "name": { "value": "name" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [
            { "id": "string-max-length", "length": { "value": 30 } },
            { "id": "string-pattern", "pattern": { "value": "[0-9a-fA-F]+" } }
          ]
        },
        {
          "name": { "value": "fiz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [
            { "id": "required" },
            { "id": "number-multiple-of", "value": { "value": 3 } }
          ]
        },
        {
          "name": { "value": "buzz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [{ "id": "number-multiple-of", "value": { "value": 5 } }]
        },
        {
          "name": { "value": "fizbuzz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [{ "id": "number-multiple-of", "value": { "value": 15 } }]
        },
        {
          "name": { "value": "foo" },
          "typeName": { "value": "newWidgetFoo" },
          "isPrimitive": false,
          "isArray": false,
          "rules": []
        },
        {
          "name": { "value": "size" },
          "typeName": { "value": "productSize" },
          "isPrimitive": false,
          "isArray": false,
          "rules": [
            {
              "id": "string-enum",
              "values": [
                { "value": "small" },
                { "value": "medium" },
                { "value": "large" }
              ]
            }
          ],
          "meta": [
            {
              "key": { "value": "codegen-enum-description" },
              "value": { "value": "One of the many states of matter" }
            },
            {
              "key": { "value": "codegen-enum-value-descriptions" },
              "value": {
                "value": {
                  "small": "The small size",
                  "medium": "Between the small and large sizes",
                  "large": "The larger size"
                }
              }
            }
          ]
        }
      ],
      "rules": []
    },
    {
      "name": { "value": "gizmosResponse" },
      "properties": [
        {
          "name": { "value": "data" },
          "typeName": { "value": "gizmo" },
          "isPrimitive": false,
          "isArray": true,
          "rules": [{ "id": "required" }]
        }
      ],
      "rules": []
    },
    {
      "name": { "value": "createWidgetBody" },
      "properties": [
        {
          "name": { "value": "name" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [{ "id": "required" }]
        }
      ],
      "rules": [{ "id": "object-additional-properties", "forbidden": true }]
    },
    {
      "name": { "value": "exhaustiveParamsBody" },
      "properties": [
        {
          "name": { "value": "foo" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "name": { "value": "bar" },
          "typeName": { "value": "string" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        }
      ],
      "rules": []
    },
    {
      "name": { "value": "widgetFoo" },
      "properties": [
        {
          "name": { "value": "fiz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "name": { "value": "buzz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [{ "id": "required" }]
        }
      ],
      "rules": []
    },
    {
      "name": { "value": "newWidgetFoo" },
      "properties": [
        {
          "name": { "value": "fiz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": []
        },
        {
          "name": { "value": "buzz" },
          "typeName": { "value": "number" },
          "isPrimitive": true,
          "isArray": false,
          "rules": [{ "id": "required" }]
        }
      ],
      "rules": []
    }
  ],
  "enums": [
    {
      "name": { "value": "stateOfMatter" },
      "values": [
        { "value": "solid" },
        { "value": "liquid" },
        { "value": "gas" },
        { "value": "plasma" },
        { "value": "bose-einstein-condensate" }
      ],
      "meta": [
        {
          "key": { "value": "codegen-enum-description" },
          "value": { "value": "One of the many states of matter" }
        },
        {
          "key": { "value": "codegen-enum-value-descriptions" },
          "value": {
            "value": {
              "solid": "Substance holds its own shape",
              "liquid": "Takes the shape of its container",
              "gas": "Molecules are far apart and don't really interact with each other",
              "plasma": "Mixture of separated electons and nuclei at high temperature",
              "bose-einstein-condensate": "Gas of bosons at their lowest quantum state"
            }
          }
        }
      ]
    },
    {
      "name": { "value": "createGizmoSize" },
      "values": [
        { "value": "small" },
        { "value": "medium" },
        { "value": "big" },
        { "value": "XL" }
      ],
      "meta": [
        {
          "key": { "value": "codegen-enum-description" },
          "value": { "value": "Anonymous enum" }
        },
        {
          "key": { "value": "codegen-enum-value-descriptions" },
          "value": {
            "value": {
              "small": "The small size",
              "medium": "Between the small and large sizes",
              "big": "The big size",
              "XL": "Bigger than big"
            }
          }
        }
      ]
    },
    {
      "name": { "value": "exhaustiveParamsQueryEnum" },
      "values": [{ "value": "one" }, { "value": "two" }, { "value": "three" }]
    },
    {
      "name": { "value": "exhaustiveParamsQueryEnumArray" },
      "values": [{ "value": "one" }, { "value": "two" }, { "value": "three" }]
    },
    {
      "name": { "value": "exhaustiveParamsPathEnum" },
      "values": [{ "value": "one" }, { "value": "two" }, { "value": "three" }]
    },
    {
      "name": { "value": "exhaustiveParamsPathEnumArray" },
      "values": [{ "value": "one" }, { "value": "two" }, { "value": "three" }]
    },
    {
      "name": { "value": "exhaustiveParamsHeaderEnum" },
      "values": [{ "value": "one" }, { "value": "two" }, { "value": "three" }]
    },
    {
      "name": { "value": "exhaustiveParamsHeaderEnumArray" },
      "values": [{ "value": "one" }, { "value": "two" }, { "value": "three" }]
    },
    {
      "name": { "value": "productSize" },
      "values": [
        { "value": "small" },
        { "value": "medium" },
        { "value": "large" }
      ],
      "meta": [
        {
          "key": { "value": "codegen-enum-description" },
          "value": { "value": "One of the many states of matter" }
        },
        {
          "key": { "value": "codegen-enum-value-descriptions" },
          "value": {
            "value": {
              "small": "The small size",
              "medium": "Between the small and large sizes",
              "large": "The larger size"
            }
          }
        }
      ]
    }
  ],
  "unions": [],
  "meta": [
    { "key": { "value": "metaString" }, "value": { "value": "bar" } },
    { "key": { "value": "metaNumber" }, "value": { "value": 1234 } },
    { "key": { "value": "metaBoolean" }, "value": { "value": true } },
    { "key": { "value": "metaNull" }, "value": { "value": null } },
    {
      "key": { "value": "metaObject" },
      "value": { "value": { "foo": "bar" } }
    },
    {
      "key": { "value": "metaArray" },
      "value": { "value": [{ "foo": "bar" }] }
    }
  ]
}

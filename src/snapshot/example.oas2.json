{
  "swagger": "2.0",
  "x-metaString": "bar",
  "x-metaNumber": 1234,
  "x-metaBoolean": true,
  "x-metaNull": null,
  "x-metaObject": { "foo": "bar" },
  "x-metaArray": [{ "foo": "bar" }],
  "info": {
    "description": "Example schema to exercise all parser functionality",
    "version": "1.2.3-rc4",
    "title": "Basketry Example",
    "x-metaString": "bar",
    "x-metaNumber": 1234,
    "x-metaBoolean": true,
    "x-metaNull": null,
    "x-metaObject": { "foo": "bar" },
    "x-metaArray": [{ "foo": "bar" }]
  },
  "parameters": {
    "search": {
      "name": "search",
      "in": "query",
      "type": "string",
      "default": "QWERTY",
      "x-metaString": "bar",
      "x-metaNumber": 1234,
      "x-metaBoolean": true,
      "x-metaNull": null,
      "x-metaObject": { "foo": "bar" },
      "x-metaArray": [{ "foo": "bar" }]
    }
  },
  "responses": {
    "gizmo": {
      "description": "A single of gizmo",
      "schema": { "$ref": "#/definitions/gizmo" }
    },
    "gizmos": {
      "description": "A collection of gizmos",
      "schema": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/definitions/gizmo" }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    },
    "alternate-basic-auth": {
      "type": "basic"
    },
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "x-apikey"
    },
    "alternateApiKeyAuth": {
      "type": "apiKey",
      "in": "query",
      "name": "apikey"
    },
    "oauth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://example.com/auth",
      "scopes": {
        "read:gizmos": "Access gizmo data",
        "write:gizmos": "Write gizmo data",
        "admin:gizmos": "Manage gizmos"
      }
    }
  },
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/gizmos": {
      "get": {
        "summary": "Only has a summary",
        "operationId": "getGizmos",
        "parameters": [{ "$ref": "#/parameters/search" }],
        "responses": {
          "default": { "$ref": "#/responses/gizmos" }
        },
        "security": [
          {
            "oauth2Auth": ["read:gizmos"]
          }
        ]
      },
      "post": {
        "summary": "Has a summary in addition to a description",
        "description": "Has a description in addition to a summary",
        "operationId": "createGizmo",
        "parameters": [
          {
            "in": "query",
            "description": "Anonymous enum",
            "name": "size",
            "type": "string",
            "enum": ["small", "medium", "big", "XL"]
          }
        ],
        "responses": {
          "default": { "$ref": "#/responses/gizmo" }
        },
        "security": [
          {
            "oauth2Auth": ["write:gizmos"]
          }
        ]
      },
      "put": {
        "operationId": "updateGizmo",
        "parameters": [
          {
            "in": "query",
            "description": "array of primitive",
            "name": "factors",
            "type": "array",
            "collectionFormat": "csv",
            "minItems": 2,
            "maxItems": 6,
            "items": {
              "type": "string",
              "pattern": "[0-9a-fA-F]+"
            }
          }
        ],
        "responses": {
          "default": { "$ref": "#/responses/gizmo" }
        },
        "security": [
          {
            "oauth2Auth": ["write:gizmos", "admin:gizmos"]
          }
        ]
      }
    },
    "/widgets": {
      "get": {
        "operationId": "getWidgets",
        "responses": {
          "default": {
            "description": "Response a defined object schema by reference",
            "schema": { "$ref": "#/definitions/widget" }
          }
        }
      },
      "post": {
        "operationId": "createWidget",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The new widget",
            "schema": {
              "type": "object",
              "required": ["name"],
              "properties": {
                "name": { "type": "string" }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Response a defined object schema by reference"
          }
        }
      },
      "put": {
        "operationId": "putWidget",
        "responses": {
          "400": {
            "description": "Error response only"
          }
        }
      }
    },
    "/widgets/{id}/foo": {
      "get": {
        "operationId": "getWidgetFoo",
        "responses": {
          "default": {
            "description": "Response a defined object schema by reference",
            "schema": { "$ref": "#/definitions/widget" }
          }
        }
      },
      "delete": {
        "operationId": "deleteWidgetFoo",
        "responses": {
          "default": {
            "description": "Response without any schema"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "description": "The widget ID",
          "in": "path",
          "type": "string",
          "required": true,
          "maxLength": 30
        }
      ]
    },
    "/exhaustive": {
      "get": {
        "operationId": "exhaustiveFormats",
        "parameters": [
          {
            "name": "string-no-format",
            "in": "query",
            "type": "string"
          },
          {
            "name": "string-date",
            "in": "query",
            "type": "string",
            "format": "date"
          },
          {
            "name": "string-date-time",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "integer-no-format",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "integer-int32",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "integer-int64",
            "in": "query",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "number-no-format",
            "in": "query",
            "type": "number"
          },
          {
            "name": "number-float",
            "in": "query",
            "type": "number",
            "format": "float"
          },
          {
            "name": "number-double",
            "in": "query",
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "default": {
            "description": "operation with an exhaustive set of string and number formats"
          }
        },
        "security": []
      }
    },
    "/exhaustive/{path-string}/{path-enum}/{path-number}/{path-integer}/{path-boolean}/{path-string-array}/{path-enum-array}/{path-number-array}/{path-integer-array}/{path-boolean-array}": {
      "get": {
        "operationId": "exhaustiveParams",
        "parameters": [
          {
            "name": "query-string",
            "in": "query",
            "type": "string"
          },
          {
            "name": "query-enum",
            "in": "query",
            "type": "string",
            "enum": ["one", "two", "three"]
          },
          {
            "name": "query-number",
            "in": "query",
            "type": "number"
          },
          {
            "name": "query-integer",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "query-boolean",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "query-string-array",
            "in": "query",
            "type": "array",
            "items": { "type": "string" }
          },
          {
            "name": "query-enum-array",
            "in": "query",
            "type": "array",
            "items": { "type": "string", "enum": ["one", "two", "three"] }
          },
          {
            "name": "query-number-array",
            "in": "query",
            "type": "array",
            "items": { "type": "number" }
          },
          {
            "name": "query-integer-array",
            "in": "query",
            "type": "array",
            "items": { "type": "integer" }
          },
          {
            "name": "query-boolean-array",
            "in": "query",
            "type": "array",
            "items": { "type": "boolean" }
          },
          {
            "name": "path-string",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "path-enum",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": ["one", "two", "three"]
          },
          {
            "name": "path-number",
            "in": "path",
            "type": "number",
            "required": true
          },
          {
            "name": "path-integer",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "path-boolean",
            "in": "path",
            "type": "boolean",
            "required": true
          },
          {
            "name": "path-string-array",
            "in": "path",
            "type": "array",
            "collectionFormat": "csv",
            "items": { "type": "string" },
            "required": true
          },
          {
            "name": "path-enum-array",
            "in": "path",
            "type": "array",
            "collectionFormat": "pipes",
            "items": { "type": "string", "enum": ["one", "two", "three"] },
            "required": true
          },
          {
            "name": "path-number-array",
            "in": "path",
            "type": "array",
            "collectionFormat": "ssv",
            "items": { "type": "number" },
            "required": true
          },
          {
            "name": "path-integer-array",
            "in": "path",
            "type": "array",
            "collectionFormat": "tsv",
            "items": { "type": "integer" },
            "required": true
          },
          {
            "name": "path-boolean-array",
            "in": "path",
            "type": "array",
            "items": { "type": "boolean" },
            "required": true
          },
          {
            "name": "header-string",
            "in": "header",
            "type": "string"
          },
          {
            "name": "header-enum",
            "in": "header",
            "type": "string",
            "enum": ["one", "two", "three"]
          },
          {
            "name": "header-number",
            "in": "header",
            "type": "number"
          },
          {
            "name": "header-integer",
            "in": "header",
            "type": "integer"
          },
          {
            "name": "header-boolean",
            "in": "header",
            "type": "boolean"
          },
          {
            "name": "header-string-array",
            "in": "header",
            "type": "array",
            "items": { "type": "string" }
          },
          {
            "name": "header-enum-array",
            "in": "header",
            "type": "array",
            "collectionFormat": "csv",
            "items": { "type": "string", "enum": ["one", "two", "three"] }
          },
          {
            "name": "header-number-array",
            "in": "header",
            "type": "array",
            "collectionFormat": "pipes",
            "items": { "type": "number" }
          },
          {
            "name": "header-integer-array",
            "in": "header",
            "type": "array",
            "collectionFormat": "ssv",
            "items": { "type": "integer" }
          },
          {
            "name": "header-boolean-array",
            "in": "header",
            "type": "array",
            "collectionFormat": "tsv",
            "items": { "type": "boolean" }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "foo": { "type": "string" },
                "bar": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "operation with an exhaustive set of params"
          }
        },
        "security": []
      }
    },
    "/authPermutations": {
      "get": {
        "operationId": "all-auth-schemes",
        "security": [
          { "basicAuth": [] },
          { "alternate-basic-auth": [] },
          { "apiKeyAuth": [] },
          { "oauth2Auth": ["admin:gizmos"] }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "operationId": "combo-auth-schemes",
        "security": [
          { "basicAuth": [], "apiKeyAuth": [] },
          { "basicAuth": [], "alternateApiKeyAuth": [] },
          { "alternate-basic-auth": [], "oauth2Auth": ["admin:gizmos"] }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "gizmo": {
      "type": "object",
      "properties": {
        "id": { "$ref": "#/definitions/id" },
        "name": { "type": "string" },
        "size": { "$ref": "#/definitions/productSize" }
      }
    },
    "productSize": {
      "type": "string",
      "enum": ["small", "medium", "large"]
    },
    "widget": {
      "type": "object",
      "required": ["id"],
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": { "$ref": "#/definitions/id" }
          }
        },
        { "$ref": "#/definitions/newWidget" }
      ],
      "additionalProperties": false
    },
    "newWidget": {
      "type": "object",
      "required": ["fiz"],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 30,
          "pattern": "[0-9a-fA-F]+"
        },
        "fiz": { "type": "number", "multipleOf": 3 },
        "buzz": { "type": "number", "multipleOf": 5, "default": 12345 },
        "fizbuzz": { "type": "number", "multipleOf": 15 },
        "foo": {
          "type": "object",
          "required": ["buzz"],
          "properties": {
            "fiz": { "type": "number" },
            "buzz": { "type": "number" }
          }
        },
        "size": { "$ref": "#/definitions/productSize" }
      }
    },
    "id": {
      "type": "string",
      "maxLength": 30
    }
  }
}
